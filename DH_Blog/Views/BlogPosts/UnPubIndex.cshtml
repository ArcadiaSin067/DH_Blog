@using DH_Blog.Models;
@using PagedList;
@using PagedList.Mvc;

@model IPagedList<BlogPost>

<link href="~/Content/PagedList.css" rel="stylesheet" />

<div class="container">
    <h2>UnPubIndex</h2>
    <h4>Blog Posts</h4>
    <hr />
    @if (User.IsInRole("Admin"))
    {
        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
    }
    <div class="col d-flex justify-content-end">
        <p>Search the Blogs for key words.</p>
    </div>
    <div class="col d-flex justify-content-end">
        @using (Html.BeginForm("Index", "BlogPosts", FormMethod.Get, htmlAttributes: new { @class = "form" }))
        {

            <div class="controls controls-row search-row">
                <input id="searchStr" name="searchStr" class="input-block-level" type="text"
                       placeholder="Search" style="padding:5px">
                <button id="searchstr" name="searchstr" class="btn allButtons" type="submit">
                    <i>Search</i>
                </button>
            </div>
        }
    </div>
    <hr />

    <table class="table">
        <tr>
            <th>
                @Html.DisplayName("Created")
            </th>
            <th>
                @Html.DisplayName("Updated")
            </th>
            <th>
                @Html.DisplayName("Title")
            </th>
            <th>
                @Html.DisplayName("Slug")
            </th>
            <th>
                @Html.DisplayName("Abstract")
            </th>
            <th>
                @Html.DisplayName("BlogPostBody")
            </th>
            <th>
                @Html.DisplayName("ImagePath")
            </th>
            <th>
                @Html.DisplayName("Published")
            </th>
            <th></th>
        </tr>
        @*cycle through every blogpost record in the set of records showing property values for each, one at a time*@
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Updated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Slug)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Abstract)
                </td>
                <td>
                    @Html.Raw(item.BlogPostBody)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImagePath)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Published)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { slug = item.Slug })
                    @Html.ActionLink("Details", "Details", new { slug = item.Slug })
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </table>
    <div class="col">
        <div class="col d-flex justify-content-end">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
        <div class="col d-flex justify-content-end">
            @Html.PagedListPager(Model, page => Url.Action("UnPubIndex", new { page, searchStr = ViewBag.Search }))
        </div>
    </div>
</div>
